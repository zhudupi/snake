{"remainingRequest":"E:\\snake\\node_modules\\babel-loader\\lib\\index.js!E:\\snake\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\snake\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\snake\\src\\components\\myCanvas.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\snake\\src\\components\\myCanvas.vue","mtime":1589004605871},{"path":"E:\\snake\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1588920415354},{"path":"E:\\snake\\node_modules\\babel-loader\\lib\\index.js","mtime":1588920450070},{"path":"E:\\snake\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1588920415354},{"path":"E:\\snake\\node_modules\\vue-loader\\lib\\index.js","mtime":1588920442588}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'myCanvas',\n  data: function data() {\n    return {\n      L: 20,\n      context: null,\n      snake: null,\n      food: null,\n      T: null,\n      speed: 1000\n    };\n  },\n  props: {\n    //多少排\n    row: {\n      type: Number,\n      default: 32\n    },\n    //多少列\n    col: {\n      type: Number,\n      default: 32\n    },\n    pen: {\n      type: String,\n      default: '#000000'\n    }\n  },\n  computed: {\n    grids: function grids() {\n      var cols = new Array();\n\n      for (var y = 0; y < this.col; y++) {\n        var rows = new Array();\n\n        for (var x = 0; x < this.row; x++) {\n          rows.push({\n            x: x,\n            y: y,\n            color: '#ffffff'\n          });\n        }\n\n        cols.push(rows);\n      }\n\n      return cols;\n    },\n    W: function W() {\n      return this.col * (this.L + 1) + 1;\n    },\n    H: function H() {\n      return this.row * (this.L + 1) + 1;\n    }\n  },\n  mounted: function mounted() {\n    // console.log(this.grids)\n    this.initCanvas(); // this.initGame()\n\n    this.initGrids();\n  },\n  watch: {\n    pen: function pen() {\n      console.log(this.pen);\n    }\n  },\n  methods: {\n    //初始化画布\n    initCanvas: function initCanvas() {\n      var canvas = this.$refs.canvas;\n      this.context = canvas.getContext('2d');\n    },\n    initGrids: function initGrids() {\n      this.context.strokeStyle = '#ccc';\n\n      for (var i = 0; i <= this.row; i++) {\n        this.drawLine(0, i * (this.L + 1), this.col * (this.L + 1), i * (this.L + 1));\n      }\n\n      for (var _i = 0; _i <= this.col; _i++) {\n        this.drawLine(_i * (this.L + 1), 0, _i * (this.L + 1), this.row * (this.L + 1));\n      }\n    },\n    drawLine: function drawLine(x1, y1, x2, y2) {\n      this.context.beginPath();\n      this.context.moveTo(x1, y1);\n      this.context.lineTo(x2, y2);\n      this.context.stroke();\n    },\n    drawSnake: function drawSnake() {\n      // initGrids()\n      this.snake.body.forEach(function (e, i) {\n        this.context.fillStyle = this.snake.color;\n        this.context.fillRect(e.x * (this.L + 1) + 1, e.y * (this.L + 1) + 1, this.L, this.L);\n      }, this);\n    },\n    drawFood: function drawFood() {\n      this.food.foods.forEach(function (e, i) {\n        this.context.fillStyle = this.food.color;\n        this.context.fillRect(e.x * (this.L + 1) + 1, e.y * (this.L + 1) + 1, this.L, this.L);\n      }, this);\n    },\n    drawAll: function drawAll() {\n      this.context.clearRect(0, 0, this.W, this.H);\n      this.initGrids();\n      this.drawSnake();\n      this.drawFood();\n    },\n    initGame: function initGame() {\n      this.snake = new Snake();\n      this.food = new Food({\n        snake: this.snake\n      }); // console.log(this.food)\n\n      var that = this;\n\n      window.onkeydown = function (ev) {\n        switch (ev.keyCode) {\n          case 37:\n            if (that.snake.direction == 'up' || that.snake.direction == 'down') {\n              that.snake.direction = 'left';\n            }\n\n            break;\n\n          case 38:\n            if (that.snake.direction == 'left' || that.snake.direction == 'right') {\n              that.snake.direction = 'up';\n            }\n\n            break;\n\n          case 39:\n            if (that.snake.direction == 'up' || that.snake.direction == 'down') {\n              that.snake.direction = 'right';\n            }\n\n            break;\n\n          case 40:\n            if (that.snake.direction == 'left' || that.snake.direction == 'right') {\n              that.snake.direction = 'down';\n            }\n\n            break;\n        }\n      }; // console.log(this.snake.body)\n\n\n      this.drawAll();\n      clearTimeout(this.T);\n      this.T = setTimeout(this.move, this.speed);\n    },\n    move: function move() {\n      // var eat=this.food.foods.some(e=>this.snake.body[0].x==e.x&&this.snake.body[0].y==e.y,this)\n      // this.snake.move(!this.food.foods.some(e=>this.snake.body[0].x==e.x&&this.snake.body[0].y==e.y,this))\n      var that = this;\n\n      function afterEat() {\n        that.food.supFood();\n      }\n\n      this.snake.move(this.food.foods, afterEat);\n\n      if (this.snake.isDead()) {\n        console.log(this.snake.body[0]);\n        this.gameOver();\n        return;\n      }\n\n      this.drawAll();\n      this.T = setTimeout(this.move, this.speed);\n    },\n    gameOver: function gameOver() {\n      console.log('game voer!'); // this.initGame()\n    },\n    keyDown: function keyDown(e) {\n      console.log(e);\n    },\n    startGame: function startGame() {\n      this.initGame();\n    },\n    stopGame: function stopGame() {\n      clearTimeout(this.T);\n    },\n    changeSpeed: function changeSpeed() {\n      this.speed = this.speed == 1000 ? 100 : 1000;\n    }\n  }\n};\n\nfunction Coord(x, y) {\n  this.x = x;\n  this.y = y;\n}\n\nfunction Snake() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$initLength = _ref.initLength,\n      initLength = _ref$initLength === void 0 ? 4 : _ref$initLength,\n      _ref$initHead = _ref.initHead,\n      initHead = _ref$initHead === void 0 ? new Coord(0, 0) : _ref$initHead,\n      _ref$gameOver = _ref.gameOver,\n      gameOver = _ref$gameOver === void 0 ? function () {\n    alert('game over');\n  } : _ref$gameOver,\n      _ref$w = _ref.w,\n      w = _ref$w === void 0 ? 32 : _ref$w,\n      _ref$h = _ref.h,\n      h = _ref$h === void 0 ? 32 : _ref$h;\n\n  this.L = 20;\n  this.color = '#000';\n  this.direction = 'right';\n  this.body = [];\n\n  for (var i = 0; i < initLength; i++) {\n    this.body.unshift(new Coord(initHead.x + i, initHead.y));\n  } // this.body.reverse()\n\n\n  this.move = function (foods, fn) {\n    var _this = this;\n\n    var oldHead = this.body[0];\n    var dx = 0,\n        dy = 0;\n\n    switch (this.direction) {\n      case 'up':\n        dx = 0, dy = -1;\n        break;\n\n      case 'down':\n        dx = 0, dy = 1;\n        break;\n\n      case 'left':\n        dx = -1, dy = 0;\n        break;\n\n      case 'right':\n        dx = 1, dy = 0;\n        break;\n    }\n\n    this.body.unshift(new Coord(this.body[0].x + dx, this.body[0].y + dy));\n    console.log(foods);\n\n    if (!foods.some(function (e) {\n      return _this.body[0].x == e.x && _this.body[0].y == e.y;\n    }, this)) {\n      this.body.pop();\n    } else {\n      fn();\n    } // if(this.isDead()){\n    // \tgameOver()\n    // \treturn\n    // }\n    // this.draw()\n    // setTimeout(this.move,1000)\n\n  };\n\n  this.isDead = function () {\n    var head = this.body[0]; //碰到墙壁\n\n    if (head.x < 0 || head.x >= w || head.y < 0 || head.y >= h) {\n      return true;\n    } //碰到自己\n\n\n    var flag = this.body.some(function (e, i) {\n      if (i !== 0 && head.x == e.x && head.y == e.y) {\n        return true;\n      }\n    });\n    return flag;\n  };\n\n  this.isEat = function () {\n    var _this2 = this;\n\n    return this.food.some(function (e) {\n      return _this2.body[0].x == e.x && _this2.body[0].y == e.y;\n    }, this);\n  }; // this.draw=function(){\n  // \t// initGrids()\n  // \tthis.body.forEach(function(e,i){\n  // \t\tctx.fillStyle=this.color\n  // \t\tctx.fillRect(e.x*(this.L+1)+1,e.y*(this.L+1)+1,this.L,this.L)\n  // \t},this)\n  // }\n  // this.draw()\n\n}\n\nfunction Food() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref2$num = _ref2.num,\n      num = _ref2$num === void 0 ? 1 : _ref2$num,\n      _ref2$w = _ref2.w,\n      w = _ref2$w === void 0 ? 32 : _ref2$w,\n      _ref2$h = _ref2.h,\n      h = _ref2$h === void 0 ? 32 : _ref2$h,\n      snake = _ref2.snake;\n\n  this.foods = [];\n\n  function genFood() {\n    var food = new Coord(Math.floor(Math.random() * w), Math.floor(Math.random() * h));\n    var flag = snake.body.some(function (e) {\n      return e.x == food.x && e.y == food.y;\n    }) && arr.some(function (e) {\n      return e.x == food.x && e.y == food.y;\n    });\n\n    if (flag) {\n      return genFood();\n    } else {\n      return food;\n    }\n  }\n\n  this.initFood = function () {\n    for (var i = 0; i < num; i++) {\n      this.foods.push(genFood());\n    }\n  };\n\n  this.initFood();\n\n  this.supFood = function () {\n    this.foods.push(genFood());\n    this.foods.pop();\n  };\n\n  this.color = '#ff0000';\n}",{"version":3,"sources":["myCanvas.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<div class=\"fuck\">\r\n\t\t<div>\r\n\t\t\t\r\n\t\t\t<button @click=\"startGame\">开始游戏</button>\r\n\t\t\t<button @click=\"stopGame\">停止游戏</button>\r\n\t\t\t<button @click=\"changeSpeed\">当前速度{{speed}}</button>\r\n\t\t</div>\r\n\t\t<canvas id=\"canvas\" :width=\"col*(L+1)+1\" :height=\"row*(L+1)+1\" ref=\"canvas\" @keydown=\"keyDown(e)\"></canvas>\r\n\t\t<!-- <div class=\"rows\" v-for=\"(rows,y) in grids\" :key=\"y\">\r\n\t\t\t<div class=\"grid\" :style=\"'background-color:'+returnColor(x,y)\" v-for=\"(grid,x) in rows\" :key=\"x+y\" @click=\"colour(grid)\"></div>\r\n\t\t</div> -->\r\n\t</div>\n</template>\r\n\n<script>\r\n\texport default {\r\n\t\tname:'myCanvas',\r\n\t\tdata(){\r\n\t\t\treturn {\r\n\t\t\t\tL:20,\r\n\t\t\t\tcontext:null,\r\n\t\t\t\tsnake:null,\r\n\t\t\t\tfood:null,\r\n\t\t\t\tT:null,\r\n\t\t\t\tspeed:1000,\r\n\t\t\t}\r\n\t\t},\r\n\t\tprops:{\r\n\t\t\t//多少排\r\n\t\t\trow:{\r\n\t\t\t\ttype:Number,\r\n\t\t\t\tdefault:32\r\n\t\t\t},\r\n\t\t\t//多少列\r\n\t\t\tcol:{\r\n\t\t\t\ttype:Number,\r\n\t\t\t\tdefault:32 \r\n\t\t\t},\r\n\t\t\tpen:{\r\n\t\t\t\ttype:String,\r\n\t\t\t\tdefault:'#000000'\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed:{\r\n\t\t\tgrids(){\r\n\t\t\t\tlet cols=new Array()\r\n\t\t\t\tfor(let y=0;y<this.col;y++){\r\n\t\t\t\t\tlet rows=new Array()\r\n\t\t\t\t\tfor(let x=0;x<this.row;x++){\r\n\t\t\t\t\t\trows.push({\r\n\t\t\t\t\t\t\tx:x,\r\n\t\t\t\t\t\t\ty:y,\r\n\t\t\t\t\t\t\tcolor:'#ffffff',\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcols.push(rows)\r\n\t\t\t\t}\r\n\t\t\t\treturn cols\r\n\t\t\t},\r\n\t\t\tW(){\r\n\t\t\t\treturn this.col*(this.L+1)+1\r\n\t\t\t},\r\n\t\t\tH(){\r\n\t\t\t\treturn this.row*(this.L+1)+1\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted(){\r\n\t\t\t// console.log(this.grids)\r\n\t\t\tthis.initCanvas()\r\n\t\t\t// this.initGame()\r\n\t\t\tthis.initGrids()\r\n\t\t},\r\n\t\twatch:{\r\n\t\t\tpen(){\r\n\t\t\t\tconsole.log(this.pen)\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods:{\r\n\t\t\t//初始化画布\r\n\t\t\tinitCanvas(){\r\n\t\t\t\tconst canvas=this.$refs.canvas\r\n\t\t\t\tthis.context=canvas.getContext('2d')\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tinitGrids(){\r\n\t\t\t\tthis.context.strokeStyle='#ccc'\r\n\t\t\t\tfor(let i=0;i<=this.row;i++){\r\n\t\t\t\t\tthis.drawLine(0,i*(this.L+1),this.col*(this.L+1),i*(this.L+1))\r\n\t\t\t\t}\r\n\t\t\t\tfor(let i=0;i<=this.col;i++){\r\n\t\t\t\t\tthis.drawLine(i*(this.L+1),0,i*(this.L+1),this.row*(this.L+1))\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdrawLine(x1,y1,x2,y2){\r\n\t\t\t\tthis.context.beginPath()\r\n\t\t\t\tthis.context.moveTo(x1,y1)\r\n\t\t\t\tthis.context.lineTo(x2,y2)\r\n\t\t\t\tthis.context.stroke()\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tdrawSnake:function(){\r\n\t\t\t\t// initGrids()\r\n\t\t\t\tthis.snake.body.forEach(function(e,i){\r\n\t\t\t\t\tthis.context.fillStyle=this.snake.color\r\n\t\t\t\t\tthis.context.fillRect(e.x*(this.L+1)+1,e.y*(this.L+1)+1,this.L,this.L)\r\n\t\t\t\t},this)\r\n\t\t\t},\r\n\t\t\tdrawFood:function(){\r\n\t\t\t\tthis.food.foods.forEach(function(e,i){\r\n\t\t\t\t\tthis.context.fillStyle=this.food.color\r\n\t\t\t\t\tthis.context.fillRect(e.x*(this.L+1)+1,e.y*(this.L+1)+1,this.L,this.L)\r\n\t\t\t\t},this)\r\n\t\t\t},\r\n\t\t\tdrawAll(){\r\n\t\t\t\tthis.context.clearRect(0,0,this.W,this.H)\r\n\t\t\t\tthis.initGrids()\r\n\t\t\t\tthis.drawSnake()\r\n\t\t\t\tthis.drawFood()\r\n\t\t\t},\r\n\t\t\tinitGame(){\r\n\t\t\t\tthis.snake=new Snake()\r\n\t\t\t\tthis.food=new Food({snake:this.snake})\r\n\t\t\t\t// console.log(this.food)\r\n\t\t\t\tvar that=this\r\n\t\t\t\twindow.onkeydown=function(ev){\r\n\t\t\t\t\tswitch(ev.keyCode){\r\n\t\t\t\t\t\tcase 37:\r\n\t\t\t\t\t\tif(that.snake.direction=='up'||that.snake.direction=='down'){\r\n\t\t\t\t\t\t\tthat.snake.direction='left';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 38:\r\n\t\t\t\t\t\tif(that.snake.direction=='left'||that.snake.direction=='right'){\r\n\t\t\t\t\t\t\tthat.snake.direction='up';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 39:\r\n\t\t\t\t\t\tif(that.snake.direction=='up'||that.snake.direction=='down'){\r\n\t\t\t\t\t\t\tthat.snake.direction='right';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 40:\r\n\t\t\t\t\t\tif(that.snake.direction=='left'||that.snake.direction=='right'){\r\n\t\t\t\t\t\t\tthat.snake.direction='down';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(this.snake.body)\r\n\t\t\t\tthis.drawAll()\r\n\t\t\t\tclearTimeout(this.T)\r\n\t\t\t\tthis.T=setTimeout(this.move,this.speed)\r\n\t\t\t},\r\n\t\t\tmove(){\r\n\t\t\t\t// var eat=this.food.foods.some(e=>this.snake.body[0].x==e.x&&this.snake.body[0].y==e.y,this)\r\n\t\t\t\t// this.snake.move(!this.food.foods.some(e=>this.snake.body[0].x==e.x&&this.snake.body[0].y==e.y,this))\r\n\t\t\t\tvar that=this\r\n\t\t\t\tfunction afterEat(){\r\n\t\t\t\t\tthat.food.supFood()\r\n\t\t\t\t}\r\n\t\t\t\tthis.snake.move(this.food.foods,afterEat)\r\n\t\t\t\tif(this.snake.isDead()){\r\n\t\t\t\t\tconsole.log(this.snake.body[0])\r\n\t\t\t\t\tthis.gameOver()\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tthis.drawAll()\r\n\t\t\t\tthis.T=setTimeout(this.move,this.speed)\r\n\t\t\t},\r\n\t\t\tgameOver(){\r\n\t\t\t\tconsole.log('game voer!')\r\n\t\t\t\t// this.initGame()\r\n\t\t\t},\r\n\t\t\tkeyDown(e){\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t},\r\n\t\t\tstartGame(){\r\n\t\t\t\tthis.initGame()\r\n\t\t\t},\r\n\t\t\tstopGame(){\r\n\t\t\t\t\r\n\t\t\t\tclearTimeout(this.T)\r\n\t\t\t},\r\n\t\t\tchangeSpeed(){\r\n\t\t\t\tthis.speed=this.speed==1000?100:1000\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\tfunction Coord(x,y){\r\n\t\tthis.x=x;\r\n\t\tthis.y=y\r\n\t}\r\n\tfunction Snake({initLength=4,\r\n\t\tinitHead=new Coord(0,0),\r\n\t\tgameOver=function(){\r\n\t\t\talert('game over')\r\n\t\t},\r\n\t\tw=32,\r\n\t\th=32,\r\n\t}={}){\r\n\t\tthis.L=20\r\n\t\tthis.color='#000'\r\n\t\tthis.direction='right'\r\n\t\tthis.body=[];\r\n\t\tfor(let i = 0;i<initLength;i++){\r\n\t\t\tthis.body.unshift(new Coord(initHead.x+i,initHead.y))\r\n\t\t}\r\n\t\t// this.body.reverse()\r\n\t\tthis.move=function(foods,fn){\r\n\t\t\tconst oldHead=this.body[0]\r\n\t\t\tvar dx=0,dy=0;\r\n\t\t\tswitch (this.direction){\r\n\t\t\t\tcase 'up':\r\n\t\t\t\tdx=0,dy=-1\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'down':\r\n\t\t\t\tdx=0,dy=1;\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'left':\r\n\t\t\t\tdx=-1,dy=0;\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'right':\r\n\t\t\t\tdx=1,dy=0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.body.unshift(new Coord(this.body[0].x+dx,this.body[0].y+dy))\r\n\t\t\tconsole.log(foods)\r\n\t\t\tif(! foods.some(e=>this.body[0].x==e.x&&this.body[0].y==e.y,this)){\r\n\t\t\t\tthis.body.pop()\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tfn()\r\n\t\t\t}\r\n\t\t\t// if(this.isDead()){\r\n\t\t\t// \tgameOver()\r\n\t\t\t// \treturn\r\n\t\t\t// }\r\n\t\t\t// this.draw()\r\n\t\t\t// setTimeout(this.move,1000)\r\n\t\t}\r\n\t\tthis.isDead=function(){\r\n\t\t\tconst head=this.body[0];\r\n\t\t\t//碰到墙壁\r\n\t\t\tif(head.x<0||head.x>=w||head.y<0||head.y>=h){\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\t//碰到自己\r\n\t\t\tvar flag=this.body.some(function(e,i){\r\n\t\t\t\tif(i!==0&&head.x==e.x&&head.y==e.y){\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn flag\r\n\t\t}\r\n\t\tthis.isEat=function(){\r\n\t\t\treturn this.food.some(e=>this.body[0].x==e.x&&this.body[0].y==e.y,this)\r\n\t\t}\r\n\t\t// this.draw=function(){\r\n\t\t// \t// initGrids()\r\n\t\t// \tthis.body.forEach(function(e,i){\r\n\t\t// \t\tctx.fillStyle=this.color\r\n\t\t// \t\tctx.fillRect(e.x*(this.L+1)+1,e.y*(this.L+1)+1,this.L,this.L)\r\n\t\t// \t},this)\r\n\t\t// }\r\n\t\t// this.draw()\r\n\t}\r\n\t\r\n\tfunction Food({\r\n\t\tnum=1,\r\n\t\tw=32,\r\n\t\th=32,\r\n\t\tsnake\r\n\t}={}){\r\n\t\tthis.foods=[]\r\n\t\tfunction genFood(){\r\n\t\t\tvar food=new Coord(Math.floor(Math.random()*w),Math.floor(Math.random()*h))\r\n\t\t\tvar flag=snake.body.some(e=>e.x==food.x&&e.y==food.y)&&arr.some(e=>e.x==food.x&&e.y==food.y)\r\n\t\t\tif(flag){\r\n\t\t\t\treturn genFood()\r\n\t\t\t}else{\r\n\t\t\t\treturn food\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.initFood=function(){\r\n\t\t\tfor(let i=0;i<num;i++){\r\n\t\t\t\tthis.foods.push(genFood())\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.initFood()\r\n\t\tthis.supFood=function(){\r\n\t\t\tthis.foods.push(genFood())\r\n\t\t\tthis.foods.pop()\r\n\t\t}\r\n\t\tthis.color='#ff0000'\r\n\t}\n</script>\n\n<style scoped=\"scoped\">\r\n\t.rows{\r\n\t\tmargin:0;\r\n\t\tpadding:0;\r\n\t\tfont-size: 0;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\t.grid{\r\n\t\tdisplay: inline-block;\r\n\t\twidth:20px;\r\n\t\theight:20px;\r\n\t\tborder: 1px solid #ccc;\r\n\t}\r\n\t#canvas{\r\n\t\tposition: relative;\r\n\t\t/* background: #00e; */\r\n\t}\n</style>\n"],"sourceRoot":"src/components"}]}